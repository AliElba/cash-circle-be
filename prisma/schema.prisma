// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String?  // Nullable for unregistered users
  firstName String?
  lastName  String?
  status    String   @default("registered") // registered, unregistered

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  circlesOwned Circle[] @relation("CircleOwner")
  circleMemberships CircleMember[]
}

model Circle {
  id        String    @id @default(cuid())
  name      String
  owner     User      @relation("CircleOwner", fields: [ownerId], references: [id])
  ownerId   String
  members   CircleMember[]
  status    String    @default("pending") // pending, active, completed
  createdAt DateTime  @default(now())
}

model CircleMember {
  id          String   @id @default(cuid())
  circle      Circle   @relation(fields: [circleId], references: [id])
  circleId    String
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  slotNumber  Int?
  status      String   @default("pending") // pending, confirmed
  paymentStatus String @default("pending") // paid, pending
  createdAt   DateTime @default(now())
}